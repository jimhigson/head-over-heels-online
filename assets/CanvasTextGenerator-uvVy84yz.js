import{V as Q,G as k,a as x,v as p,b as Z,n as B,R as L,C as T,c as V,f as tt,e as et,g as $}from"./App-BzcrcKKs.js";const nt={normal:0,add:1,multiply:2,screen:3,overlay:4,erase:5,"normal-npm":6,"add-npm":7,"screen-npm":8,min:9,max:10},v=0,P=1,F=2,G=3,R=4,O=5,D=class Y{constructor(){this.data=0,this.blendMode="normal",this.polygonOffset=0,this.blend=!0,this.depthMask=!0}get blend(){return!!(this.data&1<<v)}set blend(t){!!(this.data&1<<v)!==t&&(this.data^=1<<v)}get offsets(){return!!(this.data&1<<P)}set offsets(t){!!(this.data&1<<P)!==t&&(this.data^=1<<P)}set cullMode(t){if(t==="none"){this.culling=!1;return}this.culling=!0,this.clockwiseFrontFace=t==="front"}get cullMode(){return this.culling?this.clockwiseFrontFace?"front":"back":"none"}get culling(){return!!(this.data&1<<F)}set culling(t){!!(this.data&1<<F)!==t&&(this.data^=1<<F)}get depthTest(){return!!(this.data&1<<G)}set depthTest(t){!!(this.data&1<<G)!==t&&(this.data^=1<<G)}get depthMask(){return!!(this.data&1<<O)}set depthMask(t){!!(this.data&1<<O)!==t&&(this.data^=1<<O)}get clockwiseFrontFace(){return!!(this.data&1<<R)}set clockwiseFrontFace(t){!!(this.data&1<<R)!==t&&(this.data^=1<<R)}get blendMode(){return this._blendMode}set blendMode(t){this.blend=t!=="none",this._blendMode=t,this._blendModeId=nt[t]||0}get polygonOffset(){return this._polygonOffset}set polygonOffset(t){this.offsets=!!t,this._polygonOffset=t}toString(){return`[pixi.js/core:State blendMode=${this.blendMode} clockwiseFrontFace=${this.clockwiseFrontFace} culling=${this.culling} depthMask=${this.depthMask} polygonOffset=${this.polygonOffset}]`}static for2d(){const t=new Y;return t.depthTest=!1,t.blend=!0,t}};D.default2d=D.for2d();let at=D;class E extends Q{constructor(t){t instanceof k&&(t={context:t});const{context:e,roundPixels:r,...o}=t||{};super({label:"Graphics",...o}),this.renderPipeId="graphics",e?this._context=e:this._context=this._ownedContext=new k,this._context.on("update",this.onViewUpdate,this),this.didViewUpdate=!0,this.allowChildren=!1,this.roundPixels=r??!1}set context(t){t!==this._context&&(this._context.off("update",this.onViewUpdate,this),this._context=t,this._context.on("update",this.onViewUpdate,this),this.onViewUpdate())}get context(){return this._context}get bounds(){return this._context.bounds}updateBounds(){}containsPoint(t){return this._context.containsPoint(t)}destroy(t){this._ownedContext&&!t?this._ownedContext.destroy(t):(t===!0||t?.context===!0)&&this._context.destroy(t),this._ownedContext=null,this._context=null,super.destroy(t)}_callContextMethod(t,e){return this.context[t](...e),this}setFillStyle(...t){return this._callContextMethod("setFillStyle",t)}setStrokeStyle(...t){return this._callContextMethod("setStrokeStyle",t)}fill(...t){return this._callContextMethod("fill",t)}stroke(...t){return this._callContextMethod("stroke",t)}texture(...t){return this._callContextMethod("texture",t)}beginPath(){return this._callContextMethod("beginPath",[])}cut(){return this._callContextMethod("cut",[])}arc(...t){return this._callContextMethod("arc",t)}arcTo(...t){return this._callContextMethod("arcTo",t)}arcToSvg(...t){return this._callContextMethod("arcToSvg",t)}bezierCurveTo(...t){return this._callContextMethod("bezierCurveTo",t)}closePath(){return this._callContextMethod("closePath",[])}ellipse(...t){return this._callContextMethod("ellipse",t)}circle(...t){return this._callContextMethod("circle",t)}path(...t){return this._callContextMethod("path",t)}lineTo(...t){return this._callContextMethod("lineTo",t)}moveTo(...t){return this._callContextMethod("moveTo",t)}quadraticCurveTo(...t){return this._callContextMethod("quadraticCurveTo",t)}rect(...t){return this._callContextMethod("rect",t)}roundRect(...t){return this._callContextMethod("roundRect",t)}poly(...t){return this._callContextMethod("poly",t)}regularPoly(...t){return this._callContextMethod("regularPoly",t)}roundPoly(...t){return this._callContextMethod("roundPoly",t)}roundShape(...t){return this._callContextMethod("roundShape",t)}filletRect(...t){return this._callContextMethod("filletRect",t)}chamferRect(...t){return this._callContextMethod("chamferRect",t)}star(...t){return this._callContextMethod("star",t)}svg(...t){return this._callContextMethod("svg",t)}restore(...t){return this._callContextMethod("restore",t)}save(){return this._callContextMethod("save",[])}getTransform(){return this.context.getTransform()}resetTransform(){return this._callContextMethod("resetTransform",[])}rotateTransform(...t){return this._callContextMethod("rotate",t)}scaleTransform(...t){return this._callContextMethod("scale",t)}setTransform(...t){return this._callContextMethod("setTransform",t)}transform(...t){return this._callContextMethod("transform",t)}translateTransform(...t){return this._callContextMethod("translate",t)}clear(){return this._callContextMethod("clear",[])}get fillStyle(){return this._context.fillStyle}set fillStyle(t){this._context.fillStyle=t}get strokeStyle(){return this._context.strokeStyle}set strokeStyle(t){this._context.strokeStyle=t}clone(t=!1){return t?new E(this._context.clone()):(this._ownedContext=null,new E(this._context))}lineStyle(t,e,r){x(p,"Graphics#lineStyle is no longer needed. Use Graphics#setStrokeStyle to set the stroke style.");const o={};return t&&(o.width=t),e&&(o.color=e),r&&(o.alpha=r),this.context.strokeStyle=o,this}beginFill(t,e){x(p,"Graphics#beginFill is no longer needed. Use Graphics#fill to fill the shape with the desired style.");const r={};return t!==void 0&&(r.color=t),e!==void 0&&(r.alpha=e),this.context.fillStyle=r,this}endFill(){x(p,"Graphics#endFill is no longer needed. Use Graphics#fill to fill the shape with the desired style."),this.context.fill();const t=this.context.strokeStyle;return(t.width!==k.defaultStrokeStyle.width||t.color!==k.defaultStrokeStyle.color||t.alpha!==k.defaultStrokeStyle.alpha)&&this.context.stroke(),this}drawCircle(...t){return x(p,"Graphics#drawCircle has been renamed to Graphics#circle"),this._callContextMethod("circle",t)}drawEllipse(...t){return x(p,"Graphics#drawEllipse has been renamed to Graphics#ellipse"),this._callContextMethod("ellipse",t)}drawPolygon(...t){return x(p,"Graphics#drawPolygon has been renamed to Graphics#poly"),this._callContextMethod("poly",t)}drawRect(...t){return x(p,"Graphics#drawRect has been renamed to Graphics#rect"),this._callContextMethod("rect",t)}drawRoundedRect(...t){return x(p,"Graphics#drawRoundedRect has been renamed to Graphics#roundRect"),this._callContextMethod("roundRect",t)}drawStar(...t){return x(p,"Graphics#drawStar has been renamed to Graphics#star"),this._callContextMethod("star",t)}}let M=null,g=null;function ot(f,t){M||(M=Z.get().createCanvas(256,128),g=M.getContext("2d",{willReadFrequently:!0}),g.globalCompositeOperation="copy",g.globalAlpha=1),(M.width<f||M.height<t)&&(M.width=B(f),M.height=B(t))}function z(f,t,e){for(let r=0,o=4*e*t;r<t;++r,o+=4)if(f[o+3]!==0)return!1;return!0}function H(f,t,e,r,o){const s=4*t;for(let h=r,n=r*s+4*e;h<=o;++h,n+=s)if(f[n+3]!==0)return!1;return!0}function rt(...f){let t=f[0];t.canvas||(t={canvas:f[0],resolution:f[1]});const{canvas:e}=t,r=Math.min(t.resolution??1,1),o=t.width??e.width,s=t.height??e.height;let h=t.output;if(ot(o,s),!g)throw new TypeError("Failed to get canvas 2D context");g.drawImage(e,0,0,o,s,0,0,o*r,s*r);const c=g.getImageData(0,0,o,s).data;let i=0,a=0,d=o-1,u=s-1;for(;a<s&&z(c,o,a);)++a;if(a===s)return L.EMPTY;for(;z(c,o,u);)--u;for(;H(c,o,i,a,u);)++i;for(;H(c,o,d,a,u);)--d;return++d,++u,g.globalCompositeOperation="source-over",g.strokeRect(i,a,d-i,u-a),g.globalCompositeOperation="copy",h??(h=new L),h.set(i/r,a/r,(d-i)/r,(u-a)/r),h}const N=new L;class st{getCanvasAndContext(t){const{text:e,style:r,resolution:o=1}=t,s=r._getFinalPadding(),h=T.measureText(e||" ",r),n=Math.ceil(Math.ceil(Math.max(1,h.width)+s*2)*o),c=Math.ceil(Math.ceil(Math.max(1,h.height)+s*2)*o),i=V.getOptimalCanvasAndContext(n,c);this._renderTextToCanvas(e,r,s,o,i);const a=r.trim?rt({canvas:i.canvas,width:n,height:c,resolution:1,output:N}):N.set(0,0,n,c);return{canvasAndContext:i,frame:a}}returnCanvasAndContext(t){V.returnCanvasAndContext(t)}_renderTextToCanvas(t,e,r,o,s){const{canvas:h,context:n}=s,c=tt(e),i=T.measureText(t||" ",e),a=i.lines,d=i.lineHeight,u=i.lineWidths,m=i.maxLineWidth,_=i.fontProperties,b=h.height;if(n.resetTransform(),n.scale(o,o),n.textBaseline=e.textBaseline,e._stroke?.width){const w=e._stroke;n.lineWidth=w.width,n.miterLimit=w.miterLimit,n.lineJoin=w.join,n.lineCap=w.cap}n.font=c;let C,S;const j=e.dropShadow?2:1;for(let w=0;w<j;++w){const A=e.dropShadow&&w===0,y=A?Math.ceil(Math.max(1,b)+r*2):0,q=y*o;if(A){n.fillStyle="black",n.strokeStyle="black";const l=e.dropShadow,X=l.color,J=l.alpha;n.shadowColor=et.shared.setValue(X).setAlpha(J).toRgbaString();const K=l.blur*o,W=l.distance*o;n.shadowBlur=K,n.shadowOffsetX=Math.cos(l.angle)*W,n.shadowOffsetY=Math.sin(l.angle)*W+q}else{if(n.fillStyle=e._fill?$(e._fill,n,i):null,e._stroke?.width){const l=e._stroke.width*e._stroke.alignment;n.strokeStyle=$(e._stroke,n,i,l)}n.shadowColor="black"}let I=(d-_.fontSize)/2;d-_.fontSize<0&&(I=0);const U=e._stroke?.width??0;for(let l=0;l<a.length;l++)C=U/2,S=U/2+l*d+_.ascent+I,e.align==="right"?C+=m-u[l]:e.align==="center"&&(C+=(m-u[l])/2),e._stroke?.width&&this._drawLetterSpacing(a[l],e,s,C+r,S+r-y,!0),e._fill!==void 0&&this._drawLetterSpacing(a[l],e,s,C+r,S+r-y)}}_drawLetterSpacing(t,e,r,o,s,h=!1){const{context:n}=r,c=e.letterSpacing;let i=!1;if(T.experimentalLetterSpacingSupported&&(T.experimentalLetterSpacing?(n.letterSpacing=`${c}px`,n.textLetterSpacing=`${c}px`,i=!0):(n.letterSpacing="0px",n.textLetterSpacing="0px")),c===0||i){h?n.strokeText(t,o,s):n.fillText(t,o,s);return}let a=o;const d=T.graphemeSegmenter(t);let u=n.measureText(t).width,m=0;for(let _=0;_<d.length;++_){const b=d[_];h?n.strokeText(b,a,s):n.fillText(b,a,s);let C="";for(let S=_+1;S<d.length;++S)C+=d[S];m=n.measureText(C).width,a+=u-m+c,u=m}}}const lt=new st;export{lt as C,E as G,at as S};
